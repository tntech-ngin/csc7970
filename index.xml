<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Networking and the Internet</title>
    <link>https://tntech-ngin.github.io/csc7970/public/</link>
    <description>Recent content on Networking and the Internet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://tntech-ngin.github.io/csc7970/public/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Course Material</title>
      <link>https://tntech-ngin.github.io/csc7970/public/material/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tntech-ngin.github.io/csc7970/public/material/</guid>
      <description>There is no mandatory textbook. The following books might be helpful. Peterson/Davie - open source book and you can use PDF or the EPUB version. You can also view the HTML pages here.
Title: Computer Networks: A Systems Approach Authors: Larry Peterson and Bruce Davie Copyright: Elsevier, 2012 Source: https://github.com/SystemsApproach License: CC BY 4.0  Socket Programming Book - Use Beej&amp;rsquo;s Guide to Network Programming for socket programming introduction.</description>
    </item>
    
    <item>
      <title>Create your own content delivery network</title>
      <link>https://tntech-ngin.github.io/csc7970/public/programming3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tntech-ngin.github.io/csc7970/public/programming3/</guid>
      <description>Due Date - November 27, 2019, 10PM CST Objectives
 Learn to break down a very complex problem into smaller problems
 Solve each smaller problem and bring them together to solve the larger problem
 Learn how CDNs work and build your own CDN
  Overview


In this project, you are going to build on the first and the second project. You will build your own &amp;ldquo;CDN load-balancer&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Programming Assignment</title>
      <link>https://tntech-ngin.github.io/csc7970/public/programming1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tntech-ngin.github.io/csc7970/public/programming1/</guid>
      <description>Due Date - Sept 13, 2019 Objectives
 Learn to create network packets.
 Learn how packets can be sent over the network.
 Familiarize you with the concept of sockets.
 Learn packing structures, endianness, unpacking, and interpreting network data.
 Learn how to use actual data from a packet.
 Use packet capture to visually inspect protocols.
Overview

In this warmup project, you are going to implement a client and a server program that will send a command over the network.</description>
    </item>
    
    <item>
      <title>Syllabus</title>
      <link>https://tntech-ngin.github.io/csc7970/public/syllabus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tntech-ngin.github.io/csc7970/public/syllabus/</guid>
      <description>Week 1 - January 22-24: Introduction, TCP/IP Internet architecture
Lecture 1: Background, How to read papers Lecture 2: TCP/IP Internet architecture [Slide 1]  Week 2 (Jan 27-31):
TCP/IP Internet architecture Reading J.H. Saltzer, D.P. Reed and D.D. Clark, End-to-End Arguments in System Design, ACM&#39;s TOCS 1981 D .D. Clark, “The Design Philosophy of the DARPA Internet Protocols”, ACM SIGCOMM Computer Communication Review, 1988  Tuesday - Paper Presentation 1 - Grant</description>
    </item>
    
    <item>
      <title>To the Cloud and Back</title>
      <link>https://tntech-ngin.github.io/csc7970/public/programming2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tntech-ngin.github.io/csc7970/public/programming2/</guid>
      <description>Due Date - October 20, 2019, 10PM CST Objectives
 Learn to create robust network protocols
 Learn about reliable communication
 How a premitive proxy might work. You can use this to get around sensorship or firewalls.
  Overview

In this project, you are going to build on the first project. You will have a server in the cloud that downloads and saves a web page in memory.</description>
    </item>
    
  </channel>
</rss>